type Link {
    id: ID!
    url: String!
    description: String!
    postedBy: User
    voteCount: Int
}

type User {
    id: ID!
    name: String!
    email: String
    password: String
}

input AuthData {
    email: String!
    password: String!
}

type Query {
    allLinks: [Link]
    allUsers: [User]
    allVotes: [Vote]
}

type SigninPayload {
    user: User!
    token: String!
}

type Vote {
    id: ID!
    user: User!
    link: Link!
}

type Mutation {
    createUser(name: String!, authProvider: AuthData!): User
    createLink(url: String!, description: String!): Link
    signinUser(auth: AuthData): SigninPayload
    createVote(linkId: ID): Vote
}

schema {
    query: Query
    mutation: Mutation
}
